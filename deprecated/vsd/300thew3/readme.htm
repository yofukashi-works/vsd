<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
	"http://www.w3.org/TR/REC-html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>組み込み型モニタのカスタマイズ方法</TITLE>
<STYLE TYPE="text/css">
BLOCKQUOTE.ALL{line-height:125%}
PRE.ALL{line-height:100%}
</STYLE>
</HEAD>
<BODY BGCOLOR="#E0FFFF" LINK="#0000FF" VLINK="#0000FF">
<A NAME="TAG1"></A>
<BR>
<BLOCKQUOTE CLASS="ALL">
　この「readme.htm」はHEW3（C/C++ Compiler Version 6.0）版の組み込み型モニタをカスタマイズするのに必要な情報が記載されています。<BR>
　<FONT COLOR=#FF0000>組み込み型モニタをビルドする前に必ずお読みください</FONT>。
なお、組み込み型モニタ自体の機能については「<A HREF=monitor.htm TARGET=_new>monitor.htm</A>」を参照ください。
<OL>
	<LI><A HREF="#TAG2">ユーザイニシャライズモジュールの必要性</A></LI>
	<LI><A HREF="#TAG3">Ｃ言語によるユーザイニシャライズモジュールの修正</A></LI>
	<LI><A HREF="#TAG4">アセンブリ言語によるユーザイニシャライズモジュールの修正</A></LI>
	<LI><A HREF="#TAG5">リンケージサブコマンドファイルの修正</A></LI>
	<LI><A HREF="#TAG6">組み込み型モニタの機能選択</A></LI>
	<LI><A HREF="#TAG7">組み込み型モニタのビルド</A></LI>
	<LI><A HREF="#TAG8">printf関数、scanf関数のサポート</A></LI>
</OL>
<P ALIGN="right"><A HREF="#TAG9">問い合わせ先</A></P>
</BLOCKQUOTE>
<HR>
<A NAME="TAG2"></A>
<BR><B>ユーザイニシャライズモジュールの必要性</B>
<BLOCKQUOTE CLASS="ALL">
　組み込み型モニタを外部拡張モードで動作させる場合、必ずユーザイニシャライズモジュールの修正が必要です。
ただし、H8/300H Tinyシリーズは外部拡張モードがないため、<FONT COLOR=#FF0000>ユーザイニシャライズモジュールを変更することが殆どありません</FONT>。
<BR>
　もし、組み込み型モニタ起動前に実行したい処理があるときだけ、ユーザイニシャライズモジュールを修正してください。
それ以外の場合は<A HREF="#TAG5">リンケージサブコマンドファイルの修正</A>の項にお進みください。<BR>
<BR>
　ユーザイニシャライズモジュールをＣ言語で記述する場合、<A HREF="#TAG3">Ｃ言語によるユーザイニシャライズモジュールの修正</A>の項にお進みください。<BR>
<BR>
　ユーザイニシャライズモジュールをアセンブリ言語で記述する場合、<A HREF="#TAG4">アセンブリ言語によるユーザイニシャライズモジュールの修正</A>の項にお進みください。<BR>
<P ALIGN="right"><A HREF="#TAG1">先頭にもどる</A></P>
</BLOCKQUOTE>
<HR>
<A NAME="TAG3"></A>
<BR><B>Ｃ言語によるユーザイニシャライズモジュールの修正</B>
<BLOCKQUOTE CLASS="ALL">
　Ｃ言語のユーザイニシャライズモジュールはファイル名「monitor.c」の中にあるINITIALIZE関数です。
組み込み型モニタのWorkspaceを起動したら、ファイル名「monitor.c」をダブルクリックし、<FONT COLOR=#FF0000>INITIALIZE関数の中を変更</FONT>してください。
<PRE CLASS="ALL">
<FONT COLOR=#008000>/************************************************************************/
/*      H8/300H Monitor Program (Normal Mode)           Ver. 2.0B       */
/*              Copyright (C) 2003 Renesas Technology Corp.             */
/************************************************************************/</FONT>
<FONT COLOR=#0000FF>#include</FONT> "<FONT COLOR=#FF0000>3664s.h</FONT>"                              <FONT COLOR=#008000>/*                      */</FONT>
<FONT COLOR=#0000FF>#pragma</FONT> global_register(monitor=R5)             <FONT COLOR=#008000>/* Return Address       */</FONT>
<FONT COLOR=#0000FF>void</FONT> (*monitor)(<FONT COLOR=#0000FF>void</FONT>);                          <FONT COLOR=#008000>/*                      */</FONT>
<FONT COLOR=#008000>/************************************************************************/
/*      User Initialize Module                                          */
/*              Input   R5 &lt;-- Return Address                           */
/*              Output  Nothing                                         */
/*              Used Stack Area --&gt; 0(0) Byte                           */
/************************************************************************/</FONT>
<FONT COLOR=#0000FF>#pragma</FONT> noregsave(INITIALIZE)                   <FONT COLOR=#008000>/* Non Register Save    */</FONT>
<FONT COLOR=#0000FF>void</FONT> INITIALIZE(<FONT COLOR=#0000FF>void</FONT>)                           <FONT COLOR=#008000>/*                      */</FONT>
{                                               <FONT COLOR=#008000>/*                      */</FONT>
  <FONT COLOR=#FF0000>この部分を修正してください</FONT>
  monitor();                                    <FONT COLOR=#008000>/* Goto Monitor Program */</FONT>
}                                               <FONT COLOR=#008000>/*                      */</FONT>
</PRE>
　ディフォルトのヘッダファイルは「3664s.h」となっています。
<FONT COLOR=#FF0000>お使いのチップに合わせて自由に変更</FONT>してください。
なお、ヘッダファイルはProjectフォルダ「monitor」にあるものが使用可能です。<BR>
　それ以外のヘッダファイルを使用する場合、Projectフォルダ「monitor」に使用するヘッダファイルをコピーするか、ないしは「オプション(<U>O</U>)」メニューの「H8S,H8/300 Standard Toolchain...」、「コンパイラ」タグの「カテゴリ(<U>Y</U>):」ドロップダウンの「ソースファイル」で「インクルードファイルディレクトリ」を追加してください。<BR>
</BLOCKQUOTE>
<BLOCKQUOTE>
<CENTER><IMG SRC=image/image1.gif></CENTER>
</BLOCKQUOTE>
<BLOCKQUOTE CLASS="ALL">
　ユーザイニシャライズモジュールが修正できたら、<A HREF="#TAG5">リンケージサブコマンドファイルの修正</A>の項にお進みください。<BR>
<P ALIGN="right"><A HREF="#TAG1">先頭にもどる</A></P>
</BLOCKQUOTE>
<HR>
<A NAME="TAG4"></A>
<BR><B>アセンブリ言語によるユーザイニシャライズモジュールの修正</B>
<BLOCKQUOTE CLASS="ALL">
　ディフォルトのProjectではユーザイニシャライズモジュールはファイル名「monitor.c」のＣ言語で記述することになっています。
アセンブリ言語でユーザイニシャライズモジュールを記述するためには<FONT COLOR=#FF0000>Projectから「monitor.c」を削除し、代わりに「monitor.src」を追加</FONT>しなければなりません。<BR>
<BR>
　組み込み型モニタのWorkspaceを起動し、「プロジェクト(<U>P</U>)」メニューの「ファイルの削除(<U>R</U>)...」でＣ言語用のユーザイニシャライズモジュール「monitor.c」を削除してください。<BR>
</BLOCKQUOTE>
<BLOCKQUOTE>
<CENTER><IMG SRC=image/image2.gif></CENTER>
</BLOCKQUOTE>
<BLOCKQUOTE CLASS="ALL">
　次に「プロジェクト(<U>P</U>)」メニューの「ファイルの追加(<U>A</U>)...」でProjectフォルダ「monitor」の中にあるアセンブリ言語用のユーザイニシャライズモジュール「monitor.src」を追加してください。<BR>
</BLOCKQUOTE>
<BLOCKQUOTE>
<CENTER><IMG SRC=image/image3.gif></CENTER>
</BLOCKQUOTE>
<BLOCKQUOTE CLASS="ALL">
　ファイル名「monitor.src」をダブルクリックし、<FONT COLOR=#FF0000>_INITIALIZEサブルーチンの中を修正</FONT>してください。<BR>
<PRE CLASS="ALL">
<FONT COLOR=#008000>;************************************************************************
;*      H8/300H Monitor Program (Normal Mode)           Ver. 2.0B       *
;*              Copyright (C) 2003 Renesas Technology Corp.             *
;************************************************************************</FONT>
                <FONT COLOR=#FF0000>.PROGRAM</FONT>  INITIALIZE            <FONT COLOR=#008000>; Program Name</FONT>
                <FONT COLOR=#FF0000>.CPU</FONT>      300HN                 <FONT COLOR=#008000>; CPU is H8/300H  Normal</FONT>
                <FONT COLOR=#FF1493>.SECTION</FONT>  ROM,CODE,ALIGN=2      <FONT COLOR=#008000>; ROM Area Section
;************************************************************************
;*      Export Define                                                   *
;************************************************************************</FONT>
                <FONT COLOR=#FF0000>.EXPORT</FONT> _INITIALIZE             <FONT COLOR=#008000>; User Initialize Module
;************************************************************************
;*      User Initialize Module                                          *
;*              Input   R5 &lt;-- Return Address                           *
;*              Output  Nothing                                         *
;*              Used Stack Area --&gt; 0(0) Byte                           *
;************************************************************************</FONT>
_INITIALIZE:    <FONT COLOR=#FF0000>この部分を修正してください</FONT>
                JMP     @R5                     <FONT COLOR=#008000>; Goto Monitor Program</FONT>
                <FONT COLOR=#FF0000>.END</FONT>                            <FONT COLOR=#008000>;</FONT>
</PRE>
　ユーザイニシャライズモジュールが修正できたら、<A HREF="#TAG5">リンケージサブコマンドファイルの修正</A>の項にお進みください。<BR>
<P ALIGN="right"><A HREF="#TAG1">先頭にもどる</A></P>
</BLOCKQUOTE>
<HR>
<A NAME="TAG5"></A>
<BR><B>リンケージサブコマンドファイルの修正</B>
<BLOCKQUOTE CLASS="ALL">
　組み込み型モニタをビルドする前に行う作業がリンケージサブコマンドファイルの修正です。
サブコマンドファイルを修正することにより、ユーザシステムのチップ種別、SCIのビットレート、各種メモリ・エリアの番地が決定します。
<FONT COLOR=#FF0000>必ずユーザシステムに適した設定にサブコマンドファイルを修正</FONT>してください。<BR>
<BR>
　リンケージサブコマンドファイルのファイル名は「monitor.sub」です。
このファイルの<FONT COLOR=#FF0000>赤文字</FONT>の部分が変更の必要な個所です。
<PRE CLASS="ALL">
INPUT      NORMAL,MONITOR
LIST       MONITOR.MAP
SHOW       SYMBOL
OUTPUT     MONITOR.MOT
FORM       STYPE
NOOPTIMIZE
LIBRARY    NORMAL,<FONT COLOR=#FF0000>3664</FONT>
LIBRARY    MONITOR
DEFINE     $BRR=<FONT COLOR=#FF0000>19</FONT>
DEFINE     $STACK=<FONT COLOR=#FF0000>FF00</FONT>
START      VECTOR/0,ROM/<FONT COLOR=#FF0000>100</FONT>,RAM/<FONT COLOR=#FF0000>F780</FONT>,USER/<FONT COLOR=#FF0000>F840</FONT>,SCI/<FONT COLOR=#FF0000>FFA8</FONT>
</PRE>
<PRE CLASS="ALL"><FONT SIZE="+1"><B>LIBRARY  NORMAL,<FONT COLOR=#FF0000>3664</FONT></B></FONT></PRE>
　ライブラリファイルの指定です。
チップ種別固有の情報はライブラリファイルとして提供されています。
以下の中から適切なライブラリファイルを指定してください。<BR>
</BLOCKQUOTE>
<CENTER>
<TABLE>
	<TR>
	<TD NOWRAP>　H8/36014シリーズ --&gt; 36014　</TD>
	<TD NOWRAP>　　</TD>
	<TD NOWRAP>　H8/3664シリーズ --&gt; 3664　</TD>
	</TR>
	<TR>
	<TD NOWRAP>　H8/36024シリーズ --&gt; 36024　</TD>
	<TD NOWRAP>　　</TD>
	<TD NOWRAP>　H8/3672シリーズ --&gt; 3672　</TD>
	</TR>
	<TR>
	<TD NOWRAP>　H8/36037シリーズ --&gt; 36037　</TD>
	<TD NOWRAP>　　</TD>
	<TD NOWRAP>　H8/3687シリーズ --&gt; 3687　</TD>
	</TR>
	<TR>
	<TD NOWRAP>　H8/36057シリーズ --&gt; 36057　</TD>
	<TD NOWRAP>　　</TD>
	<TD NOWRAP>　H8/3694シリーズ --&gt; 3694　</TD>
	</TR>
</TABLE>
</CENTER>
<BLOCKQUOTE CLASS="ALL">
<PRE CLASS="ALL"><FONT SIZE="+1"><B>DEFINE   $BRR=<FONT COLOR=#FF0000>19</FONT></B></FONT></PRE>
　SCIのビットレートの指定です。
X'TALから目的のビットレートが得られる値を<FONT COLOR=#FF0000>16進数で指定</FONT>してください。<BR>
　なお、下表及びマニュアルはビットレートの値が10進数で表現されてます。注意してください。
<FONT COLOR=#FF0000>小文字ｎが０のときの大文字Ｎの値のみ指定可能</FONT>です。<BR>
　また、ターミナル側の通信ソフトとして Hterm を使う場合、4800bps、9600bps、14400bps、19200bps、38400bps、56000bps、57600bpsのどれかを指定してください。
</BLOCKQUOTE>
<CENTER>
<TABLE BORDER BGCOLOR=#F5DEB3>
<CAPTION>ビットレートに対するＢＲＲの設定値［調歩同期式モード］</CAPTION>
	<TR>
	<TD ROWSPAN=2 ALIGN="center" NOWRAP>ビットレート</TD>
	<TD COLSPAN=3 ALIGN="center" NOWRAP>18MHz</TD>
	<TD COLSPAN=3 ALIGN="center" NOWRAP>19.6608MHz</TD>
	<TD COLSPAN=3 ALIGN="center" NOWRAP>20MHz</TD>
	</TR>
	<TR>
	<TD ALIGN="center" NOWRAP>ｎ</TD>
	<TD ALIGN="center" NOWRAP>Ｎ</TD>
	<TD ALIGN="center" NOWRAP>誤差（％）</TD>
	<TD ALIGN="center" NOWRAP>ｎ</TD>
	<TD ALIGN="center" NOWRAP>Ｎ</TD>
	<TD ALIGN="center" NOWRAP>誤差（％）</TD>
	<TD ALIGN="center" NOWRAP>ｎ</TD>
	<TD ALIGN="center" NOWRAP>Ｎ</TD>
	<TD ALIGN="center" NOWRAP>誤差（％）</TD>
	</TR>
	<TR>
	<TD ALIGN="right" NOWRAP>1200　</TD>
	<TD ALIGN="center" NOWRAP>1</TD>
	<TD ALIGN="right" NOWRAP>116</TD>
	<TD ALIGN="right" NOWRAP>0.16　</TD>
	<TD ALIGN="center" NOWRAP>1</TD>
	<TD ALIGN="right" NOWRAP>127</TD>
	<TD ALIGN="right" NOWRAP>0.00　</TD>
	<TD ALIGN="center" NOWRAP>1</TD>
	<TD ALIGN="right" NOWRAP>129</TD>
	<TD ALIGN="right" NOWRAP>0.16　</TD>
	</TR>
	<TR>
	<TD ALIGN="right" NOWRAP>2400　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>233</TD>
	<TD ALIGN="right" NOWRAP>0.16　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>255</TD>
	<TD ALIGN="right" NOWRAP>0.00　</TD>
	<TD ALIGN="center" NOWRAP>1</TD>
	<TD ALIGN="right" NOWRAP>64</TD>
	<TD ALIGN="right" NOWRAP>0.16　</TD>
	</TR>
	<TR>
	<TD ALIGN="right" NOWRAP>4800　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>116</TD>
	<TD ALIGN="right" NOWRAP>0.16　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>127</TD>
	<TD ALIGN="right" NOWRAP>0.00　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>129</TD>
	<TD ALIGN="right" NOWRAP>0.16　</TD>
	</TR>
	<TR>
	<TD ALIGN="right" NOWRAP>9600　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>58</TD>
	<TD ALIGN="right" NOWRAP>-0.69　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>63</TD>
	<TD ALIGN="right" NOWRAP>0.00　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>64</TD>
	<TD ALIGN="right" NOWRAP>0.16　</TD>
	</TR>
	<TR>
	<TD ALIGN="right" NOWRAP>19200　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>28</TD>
	<TD ALIGN="right" NOWRAP>1.02　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>31</TD>
	<TD ALIGN="right" NOWRAP>0.00　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>32</TD>
	<TD ALIGN="right" NOWRAP>-1.36　</TD>
	</TR>
	<TR>
	<TD ALIGN="right" NOWRAP>38400　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>14</TD>
	<TD ALIGN="right" NOWRAP>-2.34　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>15</TD>
	<TD ALIGN="right" NOWRAP>0.00　</TD>
	<TD ALIGN="center" NOWRAP BGCOLOR=#78CEEB>0</TD>
	<TD ALIGN="right" NOWRAP BGCOLOR=#FF0000>15</TD>
	<TD ALIGN="right" NOWRAP>1.73　</TD>
	</TR>
</TABLE>
</CENTER>
<BLOCKQUOTE CLASS="ALL">
<PRE CLASS="ALL"><FONT SIZE="+1"><B>DEFINE   $STACK=<FONT COLOR=#FF0000>FF00</FONT></B></FONT></PRE>
　ユーザプログラムの初期SP値の指定です。ユーザプログラムの初期SPを<FONT COLOR=#FF0000>16進数で指定</FONT>してください。
<PRE CLASS="ALL"><FONT SIZE="+1"><B>START    VECTOR/0,ROM/<FONT COLOR=#FF0000>100</FONT>,RAM/<FONT COLOR=#FF0000>F780</FONT>,USER/<FONT COLOR=#FF0000>F840</FONT>,SCI/<FONT COLOR=#FF0000>FFA8</FONT></B></FONT></PRE>
　各種メモリ・エリアの番地の指定です。
組み込み型モニタが使用するROM/RAM領域、仮想ベクタ領域、内蔵SCI領域の番地を<FONT COLOR=#FF0000>16進数で指定</FONT>してください。<BR>
<BR>
　　<FONT SIZE="+1"><B><TT>ROM </TT></B></FONT>　　−−＞　　組み込み型モニタが使用するROM領域<BR>
　　<FONT SIZE="+1"><B><TT>RAM </TT></B></FONT>　　−−＞　　組み込み型モニタが使用するRAM領域<BR>
　　<FONT SIZE="+1"><B><TT>USER</TT></B></FONT>　　−−＞　　ユーザプログラムの仮想ベクタ領域<BR>
　　<FONT SIZE="+1"><B><TT>SCI </TT></B></FONT>　　−−＞　　組み込み型モニタが使用する内蔵SCIの領域<BR>
<BR>
　リンケージサブコマンドファイルが修正できたら、<A HREF="#TAG6">組み込み型モニタの機能選択</A>の項にお進みください。<BR>
<P ALIGN="right"><A HREF="#TAG1">先頭にもどる</A></P>
</BLOCKQUOTE>
<HR>
<A NAME="TAG6"></A>
<BR><B>組み込み型モニタの機能選択</B>
<BLOCKQUOTE CLASS="ALL">
　HEW版の組み込み型モニタは通信ソフト Hterm に合わせて機能選択が行われています。
具体的にはコマンドのヒストリー管理は Hterm のヒストリー機能を利用し、RAM領域を大量に使用するコマンド履歴機能は削除した構成でカスタマイズされています。
このままの構成で良い場合は、<A HREF="#TAG7">組み込み型モニタのビルド</A>の項にお進みください。<BR>
<BR>
　構成を変更する場合は組み込み型モニタの機能選択を行わなければなりません。
ただし、<FONT COLOR=#FF0000>組み込み型モニタの機能選択はHEWで行うことができません</FONT>。
<FONT COLOR=#FF0000>Windows95,98,MeのMS-DOSプロンプト上で行います</FONT>。
そこで、MS-DOSプロンプトを起動し、コマンドのパスにリンケージエディタ（OPTLNK.EXE）へのパスを追加してください。
<PRE CLASS="ALL"><FONT SIZE="+1">例：（フォルダ名はHEW3のインストール状況により変化します）<BR>
<B>　SET PATH=%PATH%;C:\HEW3\TOOLS\RENESAS\H8\6_0_0\BIN;</B></FONT></PRE>
　その後、Projectフォルダ「monitor」内のReleaseフォルダにあるバッチファイル「monitor.bat」を起動してください。
<FONT COLOR=#FF0000>「monitor.bat」が組み込み型モニタの機能選択を行うバッチファイル</FONT>です。
もし、起動時に「環境設定のためのメモリが足りません」と言われたら、MS-DOSプロンプトの「プロパティ」メニューの「メモリ」タグで環境変数のサイズを大きくするか、<BR>
</BLOCKQUOTE>
<BLOCKQUOTE>
<CENTER><IMG SRC=image/image4.gif></CENTER>
</BLOCKQUOTE>
<BLOCKQUOTE CLASS="ALL">
ないしは以下のコマンド形式でバッチファイルを起動してください。
<PRE CLASS="ALL"><FONT SIZE="+1"><B>COMMAND /E:1024 /C MONITOR.BAT</B></FONT></PRE>
　あとは &quot;Y&quot; ないし &quot;N&quot; の入力で組み込み型モニタの機能選択が行えます。
<PRE CLASS="ALL">
 H8/300H Series Normal Mode Monitor Configuration Batch
 Copyright (C) 2003 Renesas Technology Corp.

 Link with Assemble    Command Module ? {y/n} : <B>Y</B>　　 (１行アセンブル)
 Link with Breakpoint  Command Module ? {y/n} : <B>Y</B>　　 (ブレークポイント)
 Link with Dump        Command Module ? {y/n} : <B>Y</B>　　 (メモリ内容のダンプ)
 Link with DisAssemble Command Module ? {y/n} : <B>Y</B>　　 (逆アセンブル)
 Link with Fill        Command Module ? {y/n} : <B>Y</B>　　 (データの書き込み)
 Link with Go          Command Module ? {y/n} : <B>Y</B>　　 (ユーザプログラムの実行)
 Link with H8 status   Command Module ? {y/n} : <B>Y</B>　　 (内蔵周辺機能の状態表示)
 Link with Load        Command Module ? {y/n} : <B>Y</B>　　 (ダウンロード)
 Link with Memory      Command Module ? {y/n} : <B>Y</B>　　 (メモリ内容の表示、変更)
 Link with Register    Command Module ? {y/n} : <B>Y</B>　　 (ＣＰＵレジスタの一覧表示)
 Link with Step        Command Module ? {y/n} : <B>Y</B>　　 (シングルステップの実行)
 Link with .&lt;register&gt; Command Module ? {y/n} : <B>Y</B>　　 (ＣＰＵレジスタの表示、変更)
 Link with help        Command Module ? {y/n} : <B>Y</B>　　 (コマンドヘルプ)
 Link with return      Command Module ? {y/n} : <B>N</B>　　 (繰り返し実行)
 Link with &lt;command&gt;.  Command Module ? {y/n} : <B>N</B>　　 (コマンド履歴)
 Link with interrupt         Function ? {y/n} : <B>Y</B>　　 (内蔵周辺機能割込み管理)
 Link with abort             Function ? {y/n} : <B>Y</B>　　 (アボート管理)

 Configuration Execute OK ? {y/n} : <B>Y</B>
</PRE>
　組み込み型モニタの機能選択ができたら、<A HREF="#TAG7">組み込み型モニタのビルド</A>の項にお進みください。<BR>
<P ALIGN="right"><A HREF="#TAG1">先頭にもどる</A></P>
</BLOCKQUOTE>
<HR>
<A NAME="TAG7"></A>
<BR><B>組み込み型モニタのビルド</B>
<BLOCKQUOTE CLASS="ALL">
　組み込み型モニタの<FONT COLOR=#FF0000>ビルドは「ビルド(<U>B</U>)」メニューから「ビルド(<U>B</U>)」を実行</FONT>するだけです。<BR>
</BLOCKQUOTE>
<BLOCKQUOTE>
<CENTER><IMG SRC=image/image5.gif></CENTER>
</BLOCKQUOTE>
<BLOCKQUOTE CLASS="ALL">
　そうするとビルドが行われ、以下のメッセージが表示されれば完成です。<BR>
</BLOCKQUOTE>
<BLOCKQUOTE>
<CENTER><IMG SRC=image/image6.gif></CENTER>
</BLOCKQUOTE>
<BLOCKQUOTE CLASS="ALL">
　完成した組み込み型モニタのロードモジュールはProjectフォルダ「monitor」内のReleaseフォルダにある「monitor.mot」です。<BR>
</BLOCKQUOTE>
<BLOCKQUOTE>
<CENTER><IMG SRC=image/image7.gif></CENTER>
</BLOCKQUOTE>
<BLOCKQUOTE CLASS="ALL">
　チップ内蔵のROMに書き込みご使用ください。<BR>
<P ALIGN="right"><A HREF="#TAG1">先頭にもどる</A></P>
</BLOCKQUOTE>
<HR>
<A NAME="TAG8"></A>
<BR><B>printf関数、scanf関数のサポート</B>
<BLOCKQUOTE CLASS="ALL">
　組み込み型モニタが使用しているSCIチャネル経由でprintf関数とscanf関数による標準入出力をサポートすることができます。
組み込み型モニタが使用するRAM領域が通常のカスタマイズに比べて約70バイト程度増えますが、標準入出力を使用することにより効率良くデバッグを行うことが可能となります。
　ただし、サポートするprintf関数とscanf関数は浮動小数点型を除いた&nbsp;&lt;no_float.h&gt;&nbsp;のものです。
<FONT COLOR=#FF0000>&lt;no_float.h&gt;&nbsp;に関してはコンパイラのマニュアルを参照</FONT>ください。<BR>
<BR>
　printf関数とscanf関数をサポートする場合は「プロジェクト(<U>P</U>)」メニューの「ファイルの追加(<U>A</U>)...」でProjectフォルダ「monitor」の中にある<FONT COLOR=#FF0000>低水準インタフェースルーチン「lower.c」を追加</FONT>してください。<BR>
</BLOCKQUOTE>
<BLOCKQUOTE>
<CENTER><IMG SRC=image/image8.gif></CENTER>
</BLOCKQUOTE>
<BLOCKQUOTE CLASS="ALL">
　次にリンケージサブコマンドファイルに標準入出力を使用するための設定を追加します。
<FONT COLOR=#FF0000>赤文字</FONT>の部分が追加すべき設定項目です。
なお、標準入出力をサポートすると組み込み型モニタが使用する<FONT COLOR=#FF0000>RAM領域が増加しますから、他の領域と重ならないように注意</FONT>してください。 
<PRE CLASS="ALL">
INPUT      NORMAL,MONITOR<FONT COLOR=#FF0000>,LOWER</FONT>
LIST       MONITOR.MAP
SHOW       SYMBOL
OUTPUT     MONITOR.MOT
FORM       STYPE
NOOPTIMIZE
LIBRARY    NORMAL,3664
LIBRARY    MONITOR
DEFINE     $BRR=19
DEFINE     $STACK=FF00
START      VECTOR/0,ROM<FONT COLOR=#FF0000>,C</FONT>/100,RAM/F780,USER/F880,SCI/FFA8
</PRE>
　設定追加後は「ビルド(<U>B</U>)」メニューから「ビルド(<U>B</U>)」を実行するだけでprintf関数とscanf関数をサポートした組み込み型モニタが完成します。<BR>
<BR>
　組み込み型モニタがサポートしたprintf関数とscanf関数をユーザプログラムから使用する場合、<FONT COLOR=#FF0000>&lt;stdio.h&gt;&nbsp;をインクルードするのではなく、printfとscanfのマクロ名を宣言</FONT>することになります。ユーザプログラムの冒頭に以下の２つのマクロ名を追加してください。
<PRE CLASS="ALL">
#define  printf  ((int (*)(const char *,...))0x????????)
#define  scanf   ((int (*)(const char *,...))0x????????)
</PRE>
　????????の部分には組み込み型モニタに<FONT COLOR=#FF0000>リンケージされたprintf関数とscanf関数の番地を記述</FONT>します。
番地は「Release」フォルダに生成されたリンケージリスト「monitor.map」より知ることができます。
リンケージリスト「monitor.map」にはprintf関数とscanf関数の番地情報（図中の<FONT COLOR=#FF0000>赤文字</FONT>の部分）がありますから、それをマクロ名の番地情報として記述します。
<PRE CLASS="ALL">
FILE=_printf
                                  <FONT COLOR=#FF0000>000026da</FONT>  0000270d        34
  __printf_lite
                                  000026da        34   func ,g         * 
FILE=_scanf
                                  <FONT COLOR=#FF0000>0000270e</FONT>  00002741        34
  __scanf_lite
                                  0000270e        34   func ,g         * 


#define  printf  ((int (*)(const char *,...))0x<FONT COLOR=#FF0000>000026da</FONT>)
#define  scanf   ((int (*)(const char *,...))0x<FONT COLOR=#FF0000>0000270e</FONT>)
</PRE>
　この２つのマクロ名を宣言することにより、通常の関数呼び出し形式で組み込み型モニタがサポートしたprintf関数とscanf関数を使用することが可能となります。
<P ALIGN="right"><A HREF="#TAG1">先頭にもどる</A></P>
</BLOCKQUOTE>
<HR>
<A NAME="TAG9"></A>
<BR><B>問い合わせ先</B>
<BLOCKQUOTE CLASS="ALL">
<PRE>
　　E-mail : <A HREF="mailto:katori.yuji@renesas.com">katori.yuji@renesas.com</A>
　　住所   : 東京都新宿区揚場町２−１　軽子坂ＭＮビル
　　部署   : 株式会社 ルネサス テクノロジ　半導体トレーニングセンター
　　TEL    : 03-3266-9344 （担当　鹿取）
　　FAX    : 03-3235-5940
</PRE>
<P ALIGN="right"><A HREF="#TAG1">先頭にもどる</A></P>
</BLOCKQUOTE>
</BODY>
</HTML>
