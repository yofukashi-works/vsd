<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ja">
<HEAD>
	<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=shift-jis">
	<title>VSD for GPS インストーラ</title>
	<script>
		window.resizeTo( 700, 600 );
	</script>
	<HTA:APPLICATION
		id="idVsdInstaller"
		innerBorder="no"
	/>
</head>
<style type="text/css">
BODY {
	color: WindowText;
	background-color: ThreeDFace;
}
</style>

<body onLoad = "WindowOnLoad()">
<form name="form1">
	AviUtl インストールフォルダ<br/>
	<INPUT TYPE="text" NAME="InstallPath" size="80">
	<input type="button" value="選択..." OnClick="SelectFolder( 'InstallPath' )"/><br/>
	
	オプション<br/>
	<input type="checkbox" name="update" OnClick="Caption()"/>VSD for GPS のアップデートのみ</br>
	<input type="checkbox" name="shortcut" />デスクトップにショートカットを作成</br>
	<input type="checkbox" name="no_ffdshow" />ffdshow をインストールしない</br>
	<br/>
	<INPUT TYPE="button" VALUE="インストール or アップデート" name="install" OnClick="Install()">
</form>
<SPAN ID="Log"></SPAN>

<script language="JavaScript">
"use strict";

var WshShell = new ActiveXObject( "WScript.Shell" );
var ShellApp = new ActiveXObject( "Shell.Application" );
var FileSys = new ActiveXObject( "Scripting.FileSystemObject" );

var WorkPath;
var InstallPath;

function WindowOnLoad(){
	var ScriptName;
	
	document.form1.shortcut.checked = true;
	
	// 作業 Dir 取得
	if(
		idVsdInstaller.commandLine.match( /^\s*"(.*?)"/ ) ||
		idVsdInstaller.commandLine.match( /\s*(\S+)/ )
	){
		ScriptName = RegExp.$1;
		WorkPath = ScriptName.replace( /[^\\]+$/, "" );
	}else{
		throw new Error( "スクリプト名が取得できません" );
	}
	
	// Program Files を探す
	if( FileSys.FolderExists( "c:\\Program Files (x86)" )){
		document.form1.InstallPath.value = "c:\\Program Files (x86)\\aviutl";
	}else if( FileSys.FolderExists( "c:\\Program Files" )){
		document.form1.InstallPath.value = "c:\\Program Files\\aviutl";
	}
	
	UpdateCheck();
}

function UpdateCheck(){
	GetPath();
	document.form1.update.checked = (FileSys.FileExists( InstallPath + "\\vsd_filter_gps.auf" )) | (FileSys.FileExists( InstallPath + "\\vsd_filter_gps_yofukashi.auf" ));
	Caption();
}

function GetPath(){
	WorkPath = WorkPath.replace( /\\$/, "" );
	InstallPath = document.form1.InstallPath.value.replace( /\\$/, "" );
}

function Caption(){
	LogClear();
	Log(
		document.form1.update.checked ?
			'「VSD for GPS のアップデートのみ」にチェックを入れると，VSD for GPS プラグインのアップデートのみを行います．<br/>' +
			'vsd_plugins\\_user_config.js 以外は上書きされます．<br/>' :
			'「インストール開始」を押すと，' +
			'<a href="http://spring-fragrance.mints.ne.jp/aviutl/">AviUtl</a>, ' +
			'<a href="http://spring-fragrance.mints.ne.jp/aviutl/">拡張編集</a>, ' +
			'<a href="https://github.com/yofukashi-works/vsd/">VSD for GPS</a>，' +
			'<a href="https://github.com/Mr-Ojii/L-SMASH-Works-Auto-Builds/">L-SMASH Woks</a>，' +
			'<a href="https://github.com/yofukashi-works/vsd/releases/download/">ffdshow</a>' +
			' がインストールされます．<br/>'
	);

	document.form1.install.value = ( document.form1.update.checked ? "アップデート" : "インストール" ) + "開始";
}

function Install(){
	document.form1.install.disabled = true;
	GetPath();
	try{
		document.form1.update.checked ? Update() : InstallSub();
		Log( "このウィンドウは閉じてください．" );
	}catch( e ){
		Log( "<font color='red'>★インストールに失敗しました<font>" );
		document.form1.install.disabled = false;
		if( e.message != '' ){
			Log( e.message );
		}else{
			throw e;
		}
	}
}

function InstallSub(){

	Log( "<hr />AviUtl のインストールを開始します" );
	Log( "AviUtl をダウンロード中..." );
	
	if( !Download( "https://spring-fragrance.mints.ne.jp/aviutl/aviutl110.zip", undefined, 1 )){
		WshShell.Run(
			'cmd /c cd /d "' + WorkPath + '"&&' +
			'7za -aoa -o"' + InstallPath + '" x aviutl*.zip&&' +
			'xcopy /s/y/i "' + WorkPath + '\\plugins" "' + InstallPath + '"',
			6, 1
		);
	
		Log( "✔AviUtl のインストール完了" );
	}

	Log( "<hr />拡張編集 のインストールを開始します" );
	Log( "拡張編集 をダウンロード中..." );
	
	if( !Download( "https://spring-fragrance.mints.ne.jp/aviutl/exedit92.zip", undefined, 1 )){
		WshShell.Run(
			'cmd /c cd /d "' + WorkPath + '"&&' +
			'7za -aoa -o"' + InstallPath + '" x exedit*.zip&&' +
			'xcopy /s/y/i "' + WorkPath + '\\plugins" "' + InstallPath + '"',
			6, 1
		);
	
		Log( "✔拡張編集 のインストール完了" );
	}

	Log( "<hr />VSD for GPS のインストールを開始します" );
	Log( "✔VSD for GPS のインストール完了" );
	
	Log( "<hr />L-SMASH Works のインストールを開始します" );
	Log( "L-SMASH Works をダウンロード中..." );
	
	CreatePluginsFolder(InstallPath);

	if( !Download( "https://github.com/Mr-Ojii/L-SMASH-Works-Auto-Builds/releases/download/build-2025-03-23-01-18-01/L-SMASH-Works_r1151_Mr-Ojii_vimeo.zip", undefined, 1 )){
		WshShell.Run(
			'cmd /c cd /d "' + WorkPath + '"&&' +
			'7za -aoa -o"' + InstallPath + "\\plugins" + '" x L-SMASH-Works*.zip lw*',
			6, 1
		);
		
		Log( "✔L-SMASH Works のインストール完了" );
	}
	
	if( !document.form1.no_ffdshow.checked ){
		Log( "<hr />ffdshow のインストールを開始します" );
		
		Download( "https://github.com/yofukashi-works/vsd/releases/download/r1023_yofukashi-works_Fork%E7%89%88/ffdshow_rev4532_20140717_clsid.exe" );
		
		WshShell.Run(
			'"' + WorkPath + '\\ffdshow_rev4532_20140717_clsid.exe"',
			4, 1
		);
		Log( "✔ffdshow のインストール完了" );
	}
	
	if( document.form1.shortcut.checked ){
		var Shortcut = WshShell.CreateShortcut(
			WshShell.SpecialFolders( "Desktop" ) + "\\AviUtl.lnk"
		);
		Shortcut.TargetPath = InstallPath + "\\aviutl.exe";
		Shortcut.Save();
	}
	
	Log( "<hr />★★★インストールが完了しました．★★★" );
	Log( 'Web ブラウザの「<a href="https://yoshinrt.github.io/vsd/install">インストール・初期設定手順</a>」にしたがって，初期設定を行ってください．' );
	ShellApp.ShellExecute( "https://yoshinrt.github.io/vsd/install" );
}

function Update(){
	Log( "VSD for GPS をアップデートしています..." );
	
	if( !(FileSys.FileExists( InstallPath + "\\vsd_filter_gps.auf" )) && !(FileSys.FileExists( InstallPath + "\\vsd_filter_gps_yofukashi.auf" ))){
		throw new Error( "インストール済みの vsd_filter_gps***.auf が見つかりません．<br/>vsd_filter_gps***.auf が存在するフォルダを「AviUtl インストールフォルダ」に指定してください" );
	}

	try{
		// ファイルを削除
		FileSys.DeleteFile(InstallPath + "\\vsd_filter_gps.auf");
	}catch( e ){}

	try{
		FileSys.DeleteFile( WorkPath + "\\plugins\\vsd_plugins\\_user_config.js" );
	}catch( e ){}
	
	WshShell.Run(
		'cmd /c cd /d "' + WorkPath + '"&&' +
		'xcopy /s/y/i "' + WorkPath + '\\plugins" "' + InstallPath + '"',
		6, 1
	);
	
	Log( "★VSD for GPS をアップデート完了" );
}

function Log( Message ){
	document.getElementById( "Log" ).innerHTML += Message + "<br />";
}

function LogClear(){
	document.getElementById( "Log" ).innerHTML = "";
}

function Download( url, file, fatal ){ 
	
	if( file === undefined ){
		url.match( /.*\/(.*)/ );
		file = WorkPath + "\\" + RegExp.$1;
	}
	
	//Log( url + " をダウンロードしています..." );
	
	if( !FileSys.FileExists( file )){
		WshShell.Run(
			/*
			"powershell -NoProfile -ExecutionPolicy Bypass -Command " +
			"\"$d=new-object System.Net.WebClient;$d.Proxy.Credentials=[System.Net.CredentialCache]::DefaultNetworkCredentials;" +
			"$d.DownloadFile('" + url + "','" + file + "')\"",
			*/
			'httpget "' +  url + '" "' + file + '"',
			6, 1
		);
		
		if( !FileSys.FileExists( file )){
			if( fatal ){
				throw new Error( url + " がダウンロードできません．しばらく経ってからやり直してみてください．" );
			}else{
				Log( "<font color='red'>" + url + " はダウンロード出来ませんでした．手動でインストールしてください．" );
				return 1;
			}
		}
	}
	//Log( ur + " ダウンロード完了" );
	return 0;
}

function SelectFolder( box ){
	var folder = ShellApp.BrowseForFolder( 0, 'フォルダ選択', 0x51, "" );
	if( folder != null ) document.form1[ box ].value = folder.Self.Path;
	
	UpdateCheck();
}

function CreatePluginsFolder(installPath) {
	// FileSystemObjectを作成
	var fso = new ActiveXObject("Scripting.FileSystemObject");
	
	// pluginsフォルダのパスを生成
	var pluginsPath = installPath + "\\plugins";
	
	// フォルダが存在するか確認し、必要に応じて作成
	if (!fso.FolderExists(pluginsPath)) {
		fso.CreateFolder(pluginsPath);
	}
}

</script>
</body></html>
